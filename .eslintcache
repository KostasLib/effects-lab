[{"/Users/kostas/Projects/effects-lab/src/index.tsx":"1","/Users/kostas/Projects/effects-lab/src/reportWebVitals.ts":"2","/Users/kostas/Projects/effects-lab/src/App.tsx":"3","/Users/kostas/Projects/effects-lab/src/mockService.ts":"4","/Users/kostas/Projects/effects-lab/src/lib/handleEffect.ts":"5","/Users/kostas/Projects/effects-lab/src/app/state.ts":"6","/Users/kostas/Projects/effects-lab/src/lib/Result.ts":"7","/Users/kostas/Projects/effects-lab/src/useSubject.ts":"8"},{"size":511,"mtime":1607900667299,"results":"9","hashOfConfig":"10"},{"size":425,"mtime":1607764993312,"results":"11","hashOfConfig":"10"},{"size":1698,"mtime":1607911263259,"results":"12","hashOfConfig":"10"},{"size":406,"mtime":1607900712543,"results":"13","hashOfConfig":"10"},{"size":1520,"mtime":1607910903937,"results":"14","hashOfConfig":"10"},{"size":1168,"mtime":1607901080280,"results":"15","hashOfConfig":"10"},{"size":752,"mtime":1607900680491,"results":"16","hashOfConfig":"10"},{"size":255,"mtime":1607906425077,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"17h42is",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/kostas/Projects/effects-lab/src/index.tsx",[],["37","38"],"/Users/kostas/Projects/effects-lab/src/reportWebVitals.ts",[],"/Users/kostas/Projects/effects-lab/src/App.tsx",["39"],"/Users/kostas/Projects/effects-lab/src/mockService.ts",["40"],"import { of, timer } from \"rxjs\";\nimport { catchError, debounceTime, mapTo, tap } from \"rxjs/operators\";\nimport { createSuccess, createFailure } from \"./lib/Result\";\n\nexport const mockService = () => {\n  return timer(3000).pipe(\n    mapTo(createSuccess(123)),\n    tap(() => {\n      if (Math.random() > 0.5) throw new Error();\n    }),\n    catchError(() => of(createFailure(\"something went wrong\")))\n  );\n};\n","/Users/kostas/Projects/effects-lab/src/lib/handleEffect.ts",[],"/Users/kostas/Projects/effects-lab/src/app/state.ts",[],"/Users/kostas/Projects/effects-lab/src/lib/Result.ts",["41"],"type Success<T> = { _type: \"success\"; value: T };\ntype Failure = { _type: \"failure\"; message: string };\ntype Loading = { _type: \"loading\" };\nexport type Result<T> = Success<T> | Failure;\n\nexport const isSuccess = <T>(input: Result<T>): input is Success<T> =>\n  input._type === \"success\";\nexport const isFailure = <T>(input: Result<T>): input is Failure =>\n  input._type === \"failure\";\n// export const isLoading = <T>(input: Result<T>): input is Loading =>\n//   input._type === \"loading\";\n\nexport const createSuccess = <T>(value: T): Success<T> => ({\n  _type: \"success\",\n  value,\n});\nexport const createFailure = (msg: string): Failure => ({\n  _type: \"failure\",\n  message: msg,\n});\n// export const createLoading = (): Loading => ({ _type: \"loading\" });\n","/Users/kostas/Projects/effects-lab/src/useSubject.ts",[],{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","severity":1,"message":"47","line":13,"column":17,"nodeType":"48","messageId":"49","endLine":13,"endColumn":25},{"ruleId":"46","severity":1,"message":"50","line":2,"column":22,"nodeType":"48","messageId":"49","endLine":2,"endColumn":34},{"ruleId":"46","severity":1,"message":"51","line":3,"column":6,"nodeType":"48","messageId":"49","endLine":3,"endColumn":13},"no-native-reassign",["52"],"no-negated-in-lhs",["53"],"@typescript-eslint/no-unused-vars","'setRoute' is assigned a value but never used.","Identifier","unusedVar","'debounceTime' is defined but never used.","'Loading' is defined but never used.","no-global-assign","no-unsafe-negation"]